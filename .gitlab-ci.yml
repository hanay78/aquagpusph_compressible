workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - version
  - version_check
  - build_and_test
  - release

variables:
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1

version_job:
  stage: version
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - VERSION_MAJOR=$(cat CMakeLists.txt | grep PACKAGE_VERSION_MAJOR | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}')
    - VERSION_MINOR=$(cat CMakeLists.txt | grep PACKAGE_VERSION_MINOR | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}')
    - VERSION_PATCH=$(cat CMakeLists.txt | grep PACKAGE_VERSION_PATCH | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}')
    - echo "The release tag is v$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH"
    - echo "TAG=v$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

version_check_job:
  stage: version_check
  needs:
    - job: version_job
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - echo "Checking if $TAG release already exist"
    - if wget https://gitlab.com/sanguinariojoe/aquagpusph/-/releases/$TAG ; then echo "$TAG already exist, please increase the version"; exit 1; fi

compile-and-test:
  image: "ubuntu:latest"
  stage: build_and_test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  before_script:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    - DEBIAN_FRONTEND=noninteractive apt-get -qq update && apt-get -qq -y --no-install-recommends install tzdata
    - cp /usr/share/zoneinfo/Europe/Madrid /etc/localtime
    - apt-get -qq install -y build-essential git cmake xxd
    - apt-get -qq install -y python3-numpy python3-dev python-is-python3
    - apt-get -qq install -y libxerces-c-dev libmuparser-dev
    - apt-get -qq install -y ocl-icd-opencl-dev pocl-opencl-icd
    - apt-get -qq install -y libopenmpi-dev libvtk9-dev
    - mkdir -p build
    - mkdir -p install
  script:
    - cmake -B build/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DAQUAGPUSPH_USE_MPI:BOOL=ON -DAQUAGPUSPH_USE_VTK:BOOL=ON -DBUILD_TESTING=ON
    - cmake --build build/ --config Release
    - cmake --install build/ --config Release
    - cd build
    - ctest --output-on-failure --timeout 30 -C Release
  artifacts:
    paths:
      - build/
      - install/

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: version_job
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Releasing $TAG"
  release:
    name: 'Release $TAG'
    tag_name: '$TAG'
    description: '$TAG'
    ref: '$CI_COMMIT_SHA'


# The releases are placed on https://gitlab.com/sanguinariojoe/aquagpusph/-/releases/v4.1.2.15
